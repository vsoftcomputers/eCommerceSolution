@page "/myCart"

@using System.Text.Json
@using SharedLibrary.Dtos.Cart
@using eCommerce.SharedLibrary.DTOs.Product
<div class="container-sm">
    <div class="row">
        <div class="card">
            <div class="card-header"> Product List</div>
            <div class="card-body">
                @if (ShowAlert)
                {
                    <div class="alert alert-@Alert">@Message</div>
                }
                <table class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>Image</th>
                            <th>Name</th>
                            <th>Quantity</th>
                            <th>Price</th>
                            <th>Total</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (MyCarts.Any())
                        {
                            foreach (var product in MyCarts)
                            {
                                <tr>
                                    <td><img src="@product.Base64Image" width="50" height="50" /></td>
                                    <td>@product.Name</td>
                                    <td>@product.PurchaseQuantity</td>
                                    <td>@product.Price</td>
                                    <td>@product.Total</td>

                                    <td>
                                        <a class="nav-link text-danger " @onclick="()=> DeleteProduct(product.CartId)">Delete</a>
                                        <input @bind-value="UpdateQuantity" width="30" /> | <a class="nav-link text-primary" @onclick="()=>UpdateCart(product.CartId)">Update Quantity</a>
                                    </td>
                                </tr>
                            }

                        }
                        else
                        {
                            <tr>
                                <td colspan="2">No Category Found</td>
                            </tr>
                        }
                    </tbody>
                </table>

                <span>Grand Total: Rs. @(MyCarts.Sum(c=>c.Total))</span>
            </div>
        </div>
    </div>
</div>
@code {
    int UpdateQuantity;
    string Message = null!;
    string Alert = "success";
    bool ShowAlert = false;
    public List<CartModel> MyCarts { get; set; } = [];
    protected override async Task OnInitializedAsync()
    {
        await GetCart();
    }

    private async Task GetCart()
    {
        string cart = await localStorageService.GetItemAsStringAsync("cart");
        if (string.IsNullOrEmpty(cart))
        {
            Alert = "success";
            Message = "No Item in your Cart";
            ShowAlert = true;
            return;
        }

        MyCarts = JsonSerializer.Deserialize<List<CartModel>>(cart)!;
    }

    async Task DeleteProduct(Guid cartId)
    {
        ShowAlert = false;

        await GetCart();
        if (!MyCarts.Any()) return;

        MyCarts.Remove(MyCarts.FirstOrDefault(c => c.CartId == cartId));
        await localStorageService.SaveAsStringAsync("cart", JsonSerializer.Serialize(MyCarts));
        Message = "Item removed from Cart";
        ShowAlert = true;

    }

    async Task UpdateCart(Guid cartId)
    {
        await GetCart();
        var cart = MyCarts.FirstOrDefault(c => c.CartId == cartId);
        cart.PurchaseQuantity = UpdateQuantity;

        MyCarts.Remove(MyCarts.FirstOrDefault(c => c.CartId == cartId));

        MyCarts.Add(cart);
        await localStorageService.SaveAsStringAsync("cart", JsonSerializer.Serialize(MyCarts));
    }
}

